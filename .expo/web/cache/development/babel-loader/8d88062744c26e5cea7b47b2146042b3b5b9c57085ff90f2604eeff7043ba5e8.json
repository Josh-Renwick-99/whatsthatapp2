{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { postLogout, postAvatar } from \"../../util/Client\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport styles from \"../../StyleSheets/profileScreenStyles\";\nimport * as ImagePicker from 'expo-image-picker';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    avatar = _useState2[0],\n    setAvatar = _useState2[1];\n  var pickImage = function _callee() {\n    var result, formData, fileType;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n          case 2:\n            result = _context.sent;\n            if (!result.cancelled) {\n              formData = new FormData();\n              formData.append('photo', {\n                uri: result.uri,\n                name: \"photo.\" + fileType,\n                type: \"image/\" + fileType\n              });\n              fileType = result.type === 'image' ? 'jpeg' : result.uri.split('.').pop();\n              setAvatar(result.uri);\n              postAvatar(formData, fileType);\n            }\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  var handleLogout = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(postLogout());\n          case 3:\n            navigation.navigate('root');\n            _context2.next = 9;\n            break;\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n  if (avatar) {\n    return _jsx(ImageBackground, {\n      source: require(\"./profileBackground.jpg\"),\n      style: {\n        flex: 1\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.profileContainer,\n          children: [_jsx(View, {\n            style: styles.avatarContainer,\n            children: _jsx(Image, {\n              style: styles.avatar,\n              source: {\n                uri: avatar\n              },\n              resizeMode: \"contain\"\n            })\n          }), _jsx(View, {\n            style: styles.editText,\n            children: _jsx(Pressable, {\n              onPress: pickImage,\n              children: _jsx(Text, {\n                style: {\n                  color: 'blue'\n                },\n                children: \"Edit Avatar\"\n              })\n            })\n          }), _jsxs(View, {\n            style: styles.profileInfoContainer,\n            children: [_jsx(View, {\n              style: styles.textContainer,\n              children: _jsx(Text, {\n                adjustsFontSizeToFit: true,\n                minimumFontScale: 0.5,\n                style: styles.nameText,\n                children: \"Joshua Renwick\"\n              })\n            }), _jsx(View, {\n              style: styles.textContainer,\n              children: _jsx(Text, {\n                adjustsFontSizeToFit: true,\n                minimumFontScale: 0.5,\n                style: styles.emailText,\n                children: \"renwickjoshua@yahoo.co.uk\"\n              })\n            })]\n          })]\n        }), _jsx(View, {\n          style: styles.logoutButtonContainer,\n          children: _jsx(View, {\n            style: styles.logoutButton,\n            children: _jsx(Pressable, {\n              onPress: function onPress() {\n                return handleLogout();\n              },\n              children: _jsx(Text, {\n                children: \"Logout\"\n              })\n            })\n          })\n        })]\n      })\n    });\n  } else {\n    return _jsx(ImageBackground, {\n      source: require(\"./profileBackground.jpg\"),\n      style: {\n        flex: 1\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.profileContainer,\n          children: [_jsx(View, {\n            style: styles.avatarContainer,\n            children: _jsx(Image, {\n              style: styles.avatar,\n              source: require(\"./defaultAvatar.png\"),\n              resizeMode: \"contain\"\n            })\n          }), _jsx(View, {\n            style: styles.editText,\n            children: _jsx(Pressable, {\n              onPress: pickImage,\n              children: _jsx(Text, {\n                style: {\n                  color: 'blue'\n                },\n                children: \"Edit Avatar\"\n              })\n            })\n          }), _jsxs(View, {\n            style: styles.profileInfoContainer,\n            children: [_jsx(View, {\n              style: styles.textContainer,\n              children: _jsx(Text, {\n                adjustsFontSizeToFit: true,\n                minimumFontScale: 0.5,\n                style: styles.nameText,\n                children: \"Joshua Renwick\"\n              })\n            }), _jsx(View, {\n              style: styles.textContainer,\n              children: _jsx(Text, {\n                adjustsFontSizeToFit: true,\n                minimumFontScale: 0.5,\n                style: styles.emailText,\n                children: \"renwickjoshua@yahoo.co.uk\"\n              })\n            })]\n          })]\n        }), _jsx(View, {\n          style: styles.logoutButtonContainer,\n          children: _jsx(View, {\n            style: styles.logoutButton,\n            children: _jsx(Pressable, {\n              onPress: function onPress() {\n                return handleLogout();\n              },\n              children: _jsx(Text, {\n                children: \"Logout\"\n              })\n            })\n          })\n        })]\n      })\n    });\n  }\n};\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","ImageBackground","Image","Pressable","Text","View","TouchableOpacity","postLogout","postAvatar","useNavigation","styles","ImagePicker","AsyncStorage","jsx","_jsx","jsxs","_jsxs","ProfileScreen","navigation","_useState","_useState2","_slicedToArray","avatar","setAvatar","pickImage","_callee","result","formData","fileType","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","sent","cancelled","FormData","append","uri","name","type","split","pop","stop","Promise","handleLogout","_callee2","_callee2$","_context2","navigate","t0","console","log","source","require","style","flex","children","container","profileContainer","avatarContainer","resizeMode","editText","onPress","color","profileInfoContainer","textContainer","adjustsFontSizeToFit","minimumFontScale","nameText","emailText","logoutButtonContainer","logoutButton"],"sources":["C:/Users/Joshua/Documents/repos/whatsthatapp2/screens/mainScreens/profile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ImageBackground, Image, Pressable, Text, View, TouchableOpacity } from 'react-native';\r\nimport { postLogout, postAvatar } from '../../util/Client';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport styles from '../../StyleSheets/profileScreenStyles';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst ProfileScreen = () => {\r\n\r\n  const navigation = useNavigation()\r\n  const [avatar, setAvatar] = useState(null)\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      const formData = new FormData();\r\n      formData.append('photo', {\r\n        uri: result.uri,\r\n        name: `photo.${fileType}`,\r\n        type: `image/${fileType}`,\r\n      });\r\n      \r\n      const fileType = result.type === 'image' ? 'jpeg' : result.uri.split('.').pop();\r\n      setAvatar(result.uri)\r\n      postAvatar(formData, fileType);\r\n    } \r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await postLogout()\r\n      navigation.navigate('root')\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  if (avatar){\r\n    return (\r\n      <ImageBackground source={require('./profileBackground.jpg')} style={{flex: 1}}>\r\n        <View style={styles.container}>\r\n          <View style={styles.profileContainer}>\r\n            <View style ={styles.avatarContainer}>\r\n              <Image \r\n                style={styles.avatar} \r\n                source={{ uri: avatar }}\r\n                resizeMode=\"contain\"\r\n              />\r\n            </View>\r\n            <View style={styles.editText}>\r\n              <Pressable onPress={pickImage}>\r\n                <Text style ={{color: 'blue'}}>Edit Avatar</Text>\r\n              </Pressable>\r\n            </View>\r\n            <View style={styles.profileInfoContainer}>\r\n              <View style={styles.textContainer}>\r\n                <Text adjustsFontSizeToFit={true} minimumFontScale={0.5} style={styles.nameText}>Joshua Renwick</Text>\r\n              </View>\r\n              <View style={styles.textContainer}>\r\n                <Text adjustsFontSizeToFit={true} minimumFontScale={0.5} style={styles.emailText}>renwickjoshua@yahoo.co.uk</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View style={styles.logoutButtonContainer}>\r\n            <View style={styles.logoutButton}>\r\n              <Pressable onPress={() => handleLogout()}>\r\n              <Text>Logout</Text>\r\n            </Pressable>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    );\r\n  } else {\r\n  return (\r\n    <ImageBackground source={require('./profileBackground.jpg')} style={{flex: 1}}>\r\n      <View style={styles.container}>\r\n        <View style={styles.profileContainer}>\r\n          <View style ={styles.avatarContainer}>\r\n            <Image \r\n              style={styles.avatar} \r\n              source={require(\"./defaultAvatar.png\")}\r\n              resizeMode=\"contain\"\r\n            />\r\n          </View>\r\n          <View style={styles.editText}>\r\n            <Pressable onPress={pickImage}>\r\n              <Text style ={{color: 'blue'}}>Edit Avatar</Text>\r\n            </Pressable>\r\n          </View>\r\n          <View style={styles.profileInfoContainer}>\r\n            <View style={styles.textContainer}>\r\n              <Text adjustsFontSizeToFit={true} minimumFontScale={0.5} style={styles.nameText}>Joshua Renwick</Text>\r\n            </View>\r\n            <View style={styles.textContainer}>\r\n              <Text adjustsFontSizeToFit={true} minimumFontScale={0.5} style={styles.emailText}>renwickjoshua@yahoo.co.uk</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <View style={styles.logoutButtonContainer}>\r\n          <View style={styles.logoutButton}>\r\n            <Pressable onPress={() => handleLogout()}>\r\n            <Text>Logout</Text>\r\n          </Pressable>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n}\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,eAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,UAAU,EAAEC,UAAU;AAC/B,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,MAAM;AACb,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAChD,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErE,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAE1B,IAAMC,UAAU,GAAGT,aAAa,EAAE;EAClC,IAAAU,SAAA,GAA4BnB,QAAQ,CAAC,IAAI,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,IAAMI,SAAS,GAAG,SAAAC,QAAA;IAAA,IAAAC,MAAA,EAAAC,QAAA,EAAAC,QAAA;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CACGxB,WAAW,CAACyB,uBAAuB,CAAC;cACrDC,UAAU,EAAE1B,WAAW,CAAC2B,gBAAgB,CAACC,GAAG;cAC5CC,aAAa,EAAE,IAAI;cACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;cACdC,OAAO,EAAE;YACX,CAAC,CAAC;UAAA;YALEhB,MAAM,GAAAM,QAAA,CAAAW,IAAA;YAOV,IAAI,CAACjB,MAAM,CAACkB,SAAS,EAAE;cACfjB,QAAQ,GAAG,IAAIkB,QAAQ,EAAE;cAC/BlB,QAAQ,CAACmB,MAAM,CAAC,OAAO,EAAE;gBACvBC,GAAG,EAAErB,MAAM,CAACqB,GAAG;gBACfC,IAAI,aAAWpB,QAAU;gBACzBqB,IAAI,aAAWrB;cACjB,CAAC,CAAC;cAEIA,QAAQ,GAAGF,MAAM,CAACuB,IAAI,KAAK,OAAO,GAAG,MAAM,GAAGvB,MAAM,CAACqB,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;cAC/E5B,SAAS,CAACG,MAAM,CAACqB,GAAG,CAAC;cACrBvC,UAAU,CAACmB,QAAQ,EAAEC,QAAQ,CAAC;YAChC;UAAC;UAAA;YAAA,OAAAI,QAAA,CAAAoB,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA,CACF;EAED,IAAMC,YAAY,GAAG,SAAAC,SAAA;IAAA,OAAA1B,mBAAA,CAAAC,KAAA,UAAA0B,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAxB,IAAA,GAAAwB,SAAA,CAAAvB,IAAA;UAAA;YAAAuB,SAAA,CAAAxB,IAAA;YAAAwB,SAAA,CAAAvB,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CAEX5B,UAAU,EAAE;UAAA;YAClBW,UAAU,CAACwC,QAAQ,CAAC,MAAM,CAAC;YAAAD,SAAA,CAAAvB,IAAA;YAAA;UAAA;YAAAuB,SAAA,CAAAxB,IAAA;YAAAwB,SAAA,CAAAE,EAAA,GAAAF,SAAA;YAE3BG,OAAO,CAACC,GAAG,CAAAJ,SAAA,CAAAE,EAAA,CAAO;UAAA;UAAA;YAAA,OAAAF,SAAA,CAAAL,IAAA;QAAA;MAAA;IAAA,yBAAAC,OAAA;EAAA,CAErB;EAED,IAAI/B,MAAM,EAAC;IACT,OACER,IAAA,CAACb,eAAe;MAAC6D,MAAM,EAAEC,OAAO,2BAA4B;MAACC,KAAK,EAAE;QAACC,IAAI,EAAE;MAAC,CAAE;MAAAC,QAAA,EAC5ElD,KAAA,CAACX,IAAI;QAAC2D,KAAK,EAAEtD,MAAM,CAACyD,SAAU;QAAAD,QAAA,GAC5BlD,KAAA,CAACX,IAAI;UAAC2D,KAAK,EAAEtD,MAAM,CAAC0D,gBAAiB;UAAAF,QAAA,GACnCpD,IAAA,CAACT,IAAI;YAAC2D,KAAK,EAAGtD,MAAM,CAAC2D,eAAgB;YAAAH,QAAA,EACnCpD,IAAA,CAACZ,KAAK;cACJ8D,KAAK,EAAEtD,MAAM,CAACY,MAAO;cACrBwC,MAAM,EAAE;gBAAEf,GAAG,EAAEzB;cAAO,CAAE;cACxBgD,UAAU,EAAC;YAAS;UACpB,EACG,EACPxD,IAAA,CAACT,IAAI;YAAC2D,KAAK,EAAEtD,MAAM,CAAC6D,QAAS;YAAAL,QAAA,EAC3BpD,IAAA,CAACX,SAAS;cAACqE,OAAO,EAAEhD,SAAU;cAAA0C,QAAA,EAC5BpD,IAAA,CAACV,IAAI;gBAAC4D,KAAK,EAAG;kBAACS,KAAK,EAAE;gBAAM,CAAE;gBAAAP,QAAA;cAAA;YAAmB;UACvC,EACP,EACPlD,KAAA,CAACX,IAAI;YAAC2D,KAAK,EAAEtD,MAAM,CAACgE,oBAAqB;YAAAR,QAAA,GACvCpD,IAAA,CAACT,IAAI;cAAC2D,KAAK,EAAEtD,MAAM,CAACiE,aAAc;cAAAT,QAAA,EAChCpD,IAAA,CAACV,IAAI;gBAACwE,oBAAoB,EAAE,IAAK;gBAACC,gBAAgB,EAAE,GAAI;gBAACb,KAAK,EAAEtD,MAAM,CAACoE,QAAS;gBAAAZ,QAAA;cAAA;YAAsB,EACjG,EACPpD,IAAA,CAACT,IAAI;cAAC2D,KAAK,EAAEtD,MAAM,CAACiE,aAAc;cAAAT,QAAA,EAChCpD,IAAA,CAACV,IAAI;gBAACwE,oBAAoB,EAAE,IAAK;gBAACC,gBAAgB,EAAE,GAAI;gBAACb,KAAK,EAAEtD,MAAM,CAACqE,SAAU;gBAAAb,QAAA;cAAA;YAAiC,EAC7G;UAAA,EACF;QAAA,EACF,EACPpD,IAAA,CAACT,IAAI;UAAC2D,KAAK,EAAEtD,MAAM,CAACsE,qBAAsB;UAAAd,QAAA,EACxCpD,IAAA,CAACT,IAAI;YAAC2D,KAAK,EAAEtD,MAAM,CAACuE,YAAa;YAAAf,QAAA,EAC/BpD,IAAA,CAACX,SAAS;cAACqE,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMlB,YAAY,EAAE;cAAA,CAAC;cAAAY,QAAA,EACzCpD,IAAA,CAACV,IAAI;gBAAA8D,QAAA;cAAA;YAAc;UACT;QACL,EACF;MAAA;IACF,EACS;EAEtB,CAAC,MAAM;IACP,OACEpD,IAAA,CAACb,eAAe;MAAC6D,MAAM,EAAEC,OAAO,2BAA4B;MAACC,KAAK,EAAE;QAACC,IAAI,EAAE;MAAC,CAAE;MAAAC,QAAA,EAC5ElD,KAAA,CAACX,IAAI;QAAC2D,KAAK,EAAEtD,MAAM,CAACyD,SAAU;QAAAD,QAAA,GAC5BlD,KAAA,CAACX,IAAI;UAAC2D,KAAK,EAAEtD,MAAM,CAAC0D,gBAAiB;UAAAF,QAAA,GACnCpD,IAAA,CAACT,IAAI;YAAC2D,KAAK,EAAGtD,MAAM,CAAC2D,eAAgB;YAAAH,QAAA,EACnCpD,IAAA,CAACZ,KAAK;cACJ8D,KAAK,EAAEtD,MAAM,CAACY,MAAO;cACrBwC,MAAM,EAAEC,OAAO,uBAAwB;cACvCO,UAAU,EAAC;YAAS;UACpB,EACG,EACPxD,IAAA,CAACT,IAAI;YAAC2D,KAAK,EAAEtD,MAAM,CAAC6D,QAAS;YAAAL,QAAA,EAC3BpD,IAAA,CAACX,SAAS;cAACqE,OAAO,EAAEhD,SAAU;cAAA0C,QAAA,EAC5BpD,IAAA,CAACV,IAAI;gBAAC4D,KAAK,EAAG;kBAACS,KAAK,EAAE;gBAAM,CAAE;gBAAAP,QAAA;cAAA;YAAmB;UACvC,EACP,EACPlD,KAAA,CAACX,IAAI;YAAC2D,KAAK,EAAEtD,MAAM,CAACgE,oBAAqB;YAAAR,QAAA,GACvCpD,IAAA,CAACT,IAAI;cAAC2D,KAAK,EAAEtD,MAAM,CAACiE,aAAc;cAAAT,QAAA,EAChCpD,IAAA,CAACV,IAAI;gBAACwE,oBAAoB,EAAE,IAAK;gBAACC,gBAAgB,EAAE,GAAI;gBAACb,KAAK,EAAEtD,MAAM,CAACoE,QAAS;gBAAAZ,QAAA;cAAA;YAAsB,EACjG,EACPpD,IAAA,CAACT,IAAI;cAAC2D,KAAK,EAAEtD,MAAM,CAACiE,aAAc;cAAAT,QAAA,EAChCpD,IAAA,CAACV,IAAI;gBAACwE,oBAAoB,EAAE,IAAK;gBAACC,gBAAgB,EAAE,GAAI;gBAACb,KAAK,EAAEtD,MAAM,CAACqE,SAAU;gBAAAb,QAAA;cAAA;YAAiC,EAC7G;UAAA,EACF;QAAA,EACF,EACPpD,IAAA,CAACT,IAAI;UAAC2D,KAAK,EAAEtD,MAAM,CAACsE,qBAAsB;UAAAd,QAAA,EACxCpD,IAAA,CAACT,IAAI;YAAC2D,KAAK,EAAEtD,MAAM,CAACuE,YAAa;YAAAf,QAAA,EAC/BpD,IAAA,CAACX,SAAS;cAACqE,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMlB,YAAY,EAAE;cAAA,CAAC;cAAAY,QAAA,EACzCpD,IAAA,CAACV,IAAI;gBAAA8D,QAAA;cAAA;YAAc;UACT;QACL,EACF;MAAA;IACF,EACS;EAEtB;AACA,CAAC;AAED,eAAejD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}