{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport styles from \"../StyleSheets/chatsStyles\";\nimport ChatPreview from \"../components/ChatPreview\";\nimport { postChat, getChats, getChatDetails } from \"../util/Client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatsScreen = function ChatsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chatPreviewData = _useState4[0],\n    setChatPreviewData = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chatName = _useState6[0],\n    setChatName = _useState6[1];\n  var fetchChats = function _callee() {\n    var chats;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getChats());\n          case 2:\n            chats = _context.sent;\n            setChatPreviewData(chats);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  useEffect(function () {\n    fetchChats();\n  }, []);\n  var handleNewChat = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(postChat(chatName));\n          case 2:\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetchChats());\n          case 4:\n            setModalVisible(false);\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  var _handleRemoveChat = function handleRemoveChat(id) {\n    cList = _toConsumableArray(chatPreviewData);\n    updateList = cList.filter(function (item) {\n      return item.chat_id !== id;\n    });\n    setChatPreviewData(updateList);\n  };\n  var handleViewChat = function _callee3(chatId) {\n    var details;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getChatDetails(chatId));\n          case 2:\n            details = _context3.sent;\n            navigation.navigate(\"chatScreen\", {\n              messageArray: details.messages,\n              membersArray: details.members,\n              chat: chatId,\n              handleRemoveChat: function handleRemoveChat() {\n                return _handleRemoveChat(chatId);\n              }\n            });\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  var _renderItem = function renderItem(item) {\n    var name = item.name,\n      last_message = item.last_message,\n      chat_id = item.chat_id;\n    var _ref2 = last_message || {},\n      message = _ref2.message,\n      author = _ref2.author;\n    return _jsx(ChatPreview, {\n      chatName: name,\n      lastMessage: message,\n      lastMessageAuthor: (author == null ? void 0 : author.first_name) + ' ' + (author == null ? void 0 : author.last_name),\n      viewChat: function viewChat() {\n        return handleViewChat(chat_id);\n      }\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.topContainer,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setModalVisible(true);\n        },\n        children: _jsx(Image, {\n          style: styles.image,\n          source: require(\"../assets/new-chat.png\")\n        })\n      })\n    }), _jsx(View, {\n      style: styles.chatListContainer,\n      children: _jsx(FlatList, {\n        data: chatPreviewData,\n        keyExtractor: function keyExtractor(item, index) {\n          return item.chat_id.toString();\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _renderItem(item);\n        }\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsxs(View, {\n          style: styles.modalTopContainer,\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 18,\n              marginTop: 10,\n              fontWeight: 'bold'\n            },\n            children: \"Create new chat\"\n          }), _jsx(TextInput, {\n            style: styles.textInput,\n            placeholder: \"  Chat Name: \",\n            onChangeText: function onChangeText(text) {\n              return setChatName(text);\n            }\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              return handleNewChat();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Create\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              setModalVisible(false);\n              setChatName('');\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          })]\n        })]\n      })\n    })]\n  });\n};\nexport default ChatsScreen;","map":{"version":3,"names":["React","useState","useEffect","FlatList","TextInput","Text","View","Image","TouchableOpacity","Modal","styles","ChatPreview","postChat","getChats","getChatDetails","jsx","_jsx","jsxs","_jsxs","ChatsScreen","_ref","navigation","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","chatPreviewData","setChatPreviewData","_useState5","_useState6","chatName","setChatName","fetchChats","_callee","chats","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","sent","stop","Promise","handleNewChat","_callee2","_callee2$","_context2","handleRemoveChat","id","cList","_toConsumableArray","updateList","filter","item","chat_id","handleViewChat","_callee3","chatId","details","_callee3$","_context3","navigate","messageArray","messages","membersArray","members","chat","renderItem","name","last_message","_ref2","message","author","lastMessage","lastMessageAuthor","first_name","last_name","viewChat","style","container","children","topContainer","onPress","image","source","require","chatListContainer","data","keyExtractor","index","toString","_ref3","animationType","transparent","visible","modalContainer","modalTopContainer","fontSize","marginTop","fontWeight","textInput","placeholder","onChangeText","text","buttonContainer","button","buttonText"],"sources":["C:/Users/Joshua/Documents/repos/whatsthatapp2/screens/chats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FlatList, TextInput, Text, View, Image, TouchableOpacity, Modal } from 'react-native';\r\nimport styles from '../StyleSheets/chatsStyles'\r\nimport ChatPreview from '../components/ChatPreview'\r\nimport { postChat, getChats, getChatDetails } from '../util/Client';\r\n\r\nconst ChatsScreen = ({navigation}) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [chatPreviewData, setChatPreviewData] = useState([])\r\n  const [chatName, setChatName] = useState('')\r\n\r\n  const fetchChats = async () => {\r\n    const chats = await getChats()\r\n    setChatPreviewData(chats)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchChats()\r\n  }, [])\r\n\r\n  const handleNewChat = async  () => {\r\n    await postChat(chatName)\r\n    await fetchChats();\r\n    setModalVisible(false)\r\n  }\r\n\r\n  const handleRemoveChat = (id) => {\r\n    cList = [...chatPreviewData]\r\n    updateList = cList.filter((item) => item.chat_id !== id)\r\n    setChatPreviewData(updateList)\r\n  }\r\n  \r\n  const handleViewChat = async (chatId) => {\r\n    const details = await getChatDetails(chatId)\r\n    navigation.navigate(\"chatScreen\", {\r\n      messageArray: details.messages,\r\n      membersArray: details.members,\r\n      chat: chatId,\r\n      handleRemoveChat: () => handleRemoveChat(chatId)\r\n    });\r\n  }\r\n\r\n  const renderItem = (item) => {\r\n    const { name, last_message, chat_id } = item;\r\n    const { message, author } = last_message || {};\r\n    return (\r\n      <ChatPreview\r\n        chatName={name}\r\n        lastMessage={message}\r\n        lastMessageAuthor={author?.first_name + ' ' + author?.last_name}\r\n        viewChat={() => handleViewChat(chat_id)}\r\n      />\r\n    );\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.topContainer}>\r\n        <TouchableOpacity onPress={() => setModalVisible(true)}>\r\n          <Image style={styles.image} source={require('../assets/new-chat.png')}></Image>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.chatListContainer}>\r\n        <FlatList\r\n          data={chatPreviewData}\r\n          keyExtractor={(item, index) => item.chat_id.toString()}\r\n          renderItem={({ item }) => renderItem(item)}\r\n        />\r\n      </View>\r\n      <Modal animationType=\"slide\" transparent={true} visible={modalVisible}>\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalTopContainer}>\r\n            <Text style={{fontSize: 18, marginTop: 10, fontWeight: 'bold'}}>Create new chat</Text>\r\n              <TextInput \r\n                style={styles.textInput}\r\n                placeholder=\"  Chat Name: \"\r\n                onChangeText={(text) => setChatName(text)}\r\n              />\r\n          </View>\r\n          <View style={styles.buttonContainer}>\r\n          <TouchableOpacity style={styles.button} onPress={() => handleNewChat()}>\r\n              <Text style={styles.buttonText}>Create</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity \r\n              style={styles.button} \r\n              onPress={() => {\r\n                  setModalVisible(false)\r\n                  setChatName('')\r\n                }}\r\n              >\r\n              <Text style={styles.buttonText}>Cancel</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChatsScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}