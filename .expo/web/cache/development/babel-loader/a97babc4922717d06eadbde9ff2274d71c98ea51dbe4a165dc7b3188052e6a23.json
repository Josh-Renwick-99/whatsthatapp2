{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport styles from \"../StyleSheets/contactsStyles\";\nimport Contact from \"../components/Contact\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ContactList = function ContactList(_ref) {\n  var contacts = _ref.contacts,\n    fromContacts = _ref.fromContacts,\n    fromBlockList = _ref.fromBlockList,\n    fromFindContacts = _ref.fromFindContacts,\n    fromAddMemberChat = _ref.fromAddMemberChat,\n    addMember = _ref.addMember,\n    handleAddContact = _ref.handleAddContact,\n    handleRemoveContact = _ref.handleRemoveContact,\n    handleBlockContact = _ref.handleBlockContact,\n    handleUnblockContact = _ref.handleUnblockContact;\n  var _useState = useState(contacts),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var sections = data.reduce(function (acc, contact) {\n    var letter = contact.last_name ? contact.last_name.charAt(0).toUpperCase() : contact.family_name.charAt(0).toUpperCase();\n    var sectionIndex = acc.findIndex(function (section) {\n      return section.title === letter;\n    });\n    if (sectionIndex >= 0) {\n      acc[sectionIndex].data.push(contact);\n    } else {\n      acc.push({\n        title: letter,\n        data: [contact]\n      });\n    }\n    return acc;\n  }, []);\n  var renderSectionHeader = function renderSectionHeader(_ref2) {\n    var section = _ref2.section;\n    return _jsx(View, {\n      style: {\n        backgroundColor: 'lightgray',\n        padding: 10\n      },\n      children: _jsx(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 16,\n          color: 'green'\n        },\n        children: section.title\n      })\n    });\n  };\n  var _removeContact = function removeContact(item, fromModal) {\n    var updatedData = data.filter(function (c) {\n      return c !== item;\n    });\n    setData(updatedData);\n    if (!fromModal) {\n      console.log(\"here\");\n      handleRemoveContact(item);\n    }\n  };\n  var _addContact = function _callee(item) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            handleAddContact(item);\n            _removeContact(item, true);\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  var _blockContact = function _callee2(item) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            handleBlockContact(item);\n            _removeContact(item, true);\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  var _unblockContact = function _callee3(item) {\n    var updatedData;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            updatedData = data.filter(function (c) {\n              return c !== item;\n            });\n            setData(updatedData);\n            handleUnblockContact(item);\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  var addMemberToChat = function _callee4(item) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            addMember(item);\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  var AddMemberContact = function AddMemberContact(_ref3) {\n    var item = _ref3.item,\n      addMemberToChat = _ref3.addMemberToChat;\n    return _jsx(Contact, {\n      item: item,\n      addMemberToChat: addMemberToChat\n    });\n  };\n  var renderItem = function renderItem(_ref4) {\n    var item = _ref4.item;\n    if (fromAddMemberChat) {\n      return _jsx(AddMemberContact, {\n        item: item,\n        addMemberToChat: addMemberToChat(item)\n      });\n    } else {\n      return _jsx(Contact, {\n        item: item,\n        removeContact: function removeContact() {\n          return _removeContact(item);\n        },\n        addContact: function addContact() {\n          return _addContact(item);\n        },\n        blockContact: function blockContact() {\n          return _blockContact(item);\n        },\n        unblockContact: function unblockContact() {\n          return _unblockContact(item);\n        },\n        fromContacts: fromContacts,\n        fromFindContacts: fromFindContacts,\n        fromBlockList: fromBlockList\n      });\n    }\n  };\n  return _jsx(View, {\n    style: styles.listContainer,\n    children: _jsx(SectionList, {\n      sections: sections,\n      keyExtractor: function keyExtractor(item, index) {\n        return item + index;\n      },\n      renderItem: renderItem,\n      renderSectionHeader: renderSectionHeader\n    })\n  });\n};\nexport default ContactList;","map":{"version":3,"names":["React","useState","useEffect","View","Text","SectionList","styles","Contact","jsx","_jsx","ContactList","_ref","contacts","fromContacts","fromBlockList","fromFindContacts","fromAddMemberChat","addMember","handleAddContact","handleRemoveContact","handleBlockContact","handleUnblockContact","_useState","_useState2","_slicedToArray","data","setData","sections","reduce","acc","contact","letter","last_name","charAt","toUpperCase","family_name","sectionIndex","findIndex","section","title","push","renderSectionHeader","_ref2","style","backgroundColor","padding","children","fontWeight","fontSize","color","removeContact","item","fromModal","updatedData","filter","c","console","log","addContact","_callee","_regeneratorRuntime","async","_callee$","_context","prev","next","stop","Promise","blockContact","_callee2","_callee2$","_context2","unblockContact","_callee3","_callee3$","_context3","addMemberToChat","_callee4","_callee4$","_context4","AddMemberContact","_ref3","renderItem","_ref4","listContainer","keyExtractor","index"],"sources":["C:/Users/Joshua/Documents/repos/whatsthatapp2/components/ContactList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, SectionList } from 'react-native';\r\nimport styles  from '../StyleSheets/contactsStyles'\r\nimport Contact from '../components/Contact'\r\nconst ContactList = ({contacts, fromContacts, fromBlockList, fromFindContacts, fromAddMemberChat, addMember, handleAddContact, handleRemoveContact, handleBlockContact, handleUnblockContact}) => {\r\n    const [data, setData] = useState(contacts); \r\n    \r\n    const sections = data.reduce((acc, contact) => {\r\n        const letter = contact.last_name ? contact.last_name.charAt(0).toUpperCase() : contact.family_name.charAt(0).toUpperCase();\r\n        const sectionIndex = acc.findIndex(section => section.title === letter);\r\n        if (sectionIndex >= 0) {\r\n        acc[sectionIndex].data.push(contact);\r\n        } else {\r\n        acc.push({ title: letter, data: [contact] });\r\n        }\r\n        return acc;\r\n  }, []);\r\n\r\n  const renderSectionHeader = ({ section }) => (\r\n    <View style={{ backgroundColor: 'lightgray', padding: 10,}}>\r\n      <Text style={{ fontWeight: 'bold', fontSize: 16, color: 'green' }}>{section.title}</Text>\r\n    </View>\r\n  );\r\n\r\n  const removeContact = (item, fromModal) => {\r\n    const updatedData = data.filter((c) => c !== item);\r\n    setData(updatedData);\r\n    if (!fromModal) {\r\n      console.log(\"here\")\r\n      handleRemoveContact(item);\r\n    }\r\n  };\r\n\r\n  const addContact = async (item) => {\r\n    handleAddContact(item)\r\n    removeContact(item, true)\r\n  }\r\n\r\n  const blockContact = async (item) => {\r\n    handleBlockContact(item)\r\n    removeContact(item, true)\r\n  }\r\n\r\n  const unblockContact = async (item) => {\r\n    const updatedData = data.filter((c) => c !== item);\r\n    setData(updatedData)\r\n    handleUnblockContact(item)\r\n  }\r\n\r\n  const addMemberToChat = async (item) => {\r\n    addMember(item)\r\n  }\r\n\r\n  const AddMemberContact = ({ item, addMemberToChat }) => {\r\n    return (\r\n      <Contact\r\n        item={item}\r\n        addMemberToChat = {addMemberToChat}\r\n      />\r\n    );\r\n  };\r\n  \r\n  const renderItem = ({ item }) => {\r\n    if (fromAddMemberChat) {\r\n      return <AddMemberContact item={item} addMemberToChat={addMemberToChat(item)} />;\r\n    } else {\r\n      return (\r\n        <Contact\r\n          item={item}\r\n          removeContact={() => removeContact(item)}\r\n          addContact={() => addContact(item)}\r\n          blockContact={() => blockContact(item)}\r\n          unblockContact={() => unblockContact(item)}\r\n          fromContacts={fromContacts}\r\n          fromFindContacts={fromFindContacts}\r\n          fromBlockList={fromBlockList}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <View style={styles.listContainer}>\r\n        <SectionList\r\n          sections={sections}\r\n          keyExtractor={(item, index) => item + index}\r\n          renderItem={renderItem}\r\n          renderSectionHeader={renderSectionHeader}\r\n        />\r\n      </View>\r\n  );\r\n};\r\n\r\nexport default ContactList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}