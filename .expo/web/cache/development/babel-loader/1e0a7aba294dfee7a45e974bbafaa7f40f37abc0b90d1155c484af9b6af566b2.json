{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../StyleSheets/contactsStyles\";\nimport ContactList from \"../components/ContactList\";\nimport { getContacts, getUsers } from \"../util/Client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ContactsScreen = function ContactsScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    contacts = _useState4[0],\n    setContacts = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    users = _useState6[0],\n    setUsers = _useState6[1];\n  useEffect(function () {\n    var fetchContacts = function _callee() {\n      var contactList;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getContacts());\n            case 2:\n              contactList = _context.sent;\n              setContacts(contactList);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n    fetchContacts();\n  }, []);\n  var handleFindContacts = function handleFindContacts() {\n    setModalVisible(true);\n    var fetchUsers = function _callee2() {\n      var userList;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(getUsers());\n            case 2:\n              userList = _context2.sent;\n              setUsers(userList);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n    fetchUsers();\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      paddingTop: 50,\n      backgroundColor: '#FFF'\n    },\n    children: [!modalVisible && _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleFindContacts();\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Find Contacts\"\n          })\n        })\n      }), _jsx(ContactList, {\n        contacts: contacts,\n        fromContacts: true\n      })]\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(View, {\n          style: styles.modalListContainer,\n          children: _jsx(ContactList, {\n            contacts: users\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.closeButton,\n          onPress: function onPress() {\n            return setModalVisible(false);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Close\"\n          })\n        })]\n      })\n    })]\n  });\n};\nexport default ContactsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","SectionList","Modal","TouchableOpacity","styles","ContactList","getContacts","getUsers","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ContactsScreen","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","contacts","setContacts","_useState5","_useState6","users","setUsers","fetchContacts","_callee","contactList","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","sent","stop","Promise","handleFindContacts","fetchUsers","_callee2","userList","_callee2$","_context2","style","flex","paddingTop","backgroundColor","children","buttonContainer","onPress","text","fromContacts","animationType","transparent","visible","modalContainer","modalListContainer","closeButton","buttonText"],"sources":["C:/Users/Joshua/Documents/repos/whatsthatapp2/screens/contacts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, SectionList, Modal, TouchableOpacity } from 'react-native';\r\nimport styles  from '../StyleSheets/contactsStyles'\r\nimport ContactList from '../components/ContactList'\r\nimport { getContacts, getUsers } from '../util/Client'\r\n\r\nconst ContactsScreen = () => {  \r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [contacts, setContacts] = useState([])\r\n  const [users, setUsers] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      const contactList = await getContacts();\r\n      setContacts(contactList)\r\n    }\r\n    fetchContacts();\r\n  }, []);\r\n  \r\n  const handleFindContacts = () => {\r\n    setModalVisible(true)\r\n    const fetchUsers = async () => {\r\n      const userList = await getUsers();\r\n      setUsers(userList)\r\n    }\r\n    fetchUsers();\r\n  }\r\n\r\n  return (\r\n    <View style={{flex: 1, paddingTop: 50, backgroundColor: '#FFF'}}>\r\n      {!modalVisible && (\r\n      <><View style={styles.buttonContainer}>\r\n          <TouchableOpacity onPress={() => handleFindContacts()}>\r\n            <Text style={styles.text}>Find Contacts</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ContactList contacts={contacts} fromContacts></ContactList></>\r\n      )}\r\n      <Modal animationType=\"slide\" transparent={true} visible={modalVisible}>\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalListContainer}>\r\n            <ContactList contacts={users}/>\r\n          </View>\r\n            <TouchableOpacity style={styles.closeButton} onPress={() => setModalVisible(false)}>\r\n              <Text style={styles.buttonText}>Close</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ContactsScreen;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}