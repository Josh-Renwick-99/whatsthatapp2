{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar URL = \"http://10.0.2.2:3333/api/1.0.0\";\nvar URL_WEB = \"http://localhost:3333/api/1.0.0\";\nexport var postLogin = function _callee3(enableButton, console.log, email, password) {\n  var requestOptions;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(email && password)) {\n            _context3.next = 6;\n            break;\n          }\n          requestOptions = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email: email,\n              password: password\n            })\n          };\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(fetch(URL + \"/login\", requestOptions).then(function _callee(response) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!(response.status === 200)) {\n                      _context.next = 5;\n                      break;\n                    }\n                    console.log(\"Login Successful!\");\n                    return _context.abrupt(\"return\", response.json());\n                  case 5:\n                    if (response.status === 400) {\n                      console.log(\"Invalid login credentials :(\");\n                    } else {\n                      console.log(\"Oops, something went wrong\");\n                    }\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).then(function _callee2(responseJson) {\n            return _regeneratorRuntime.async(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    console.log(responseJson);\n                    _context2.prev = 1;\n                    _context2.next = 4;\n                    return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"WhatsThat_usr_id\", responseJson.id.toString()));\n                  case 4:\n                    _context2.next = 6;\n                    return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"WhatsThat_usr_token\", responseJson.token));\n                  case 6:\n                    _context2.next = 11;\n                    break;\n                  case 8:\n                    _context2.prev = 8;\n                    _context2.t0 = _context2[\"catch\"](1);\n                    throw \"Something went wrong\";\n                  case 11:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, [[1, 8]], Promise);\n          }).then(function () {\n            enableButton;\n          }));\n        case 4:\n          _context3.next = 8;\n          break;\n        case 6:\n          console.log(\"Login credentials cannot be empty\");\n          enableButton;\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var postRegister = function _callee6(console.log, enableButton, firstName, lastName, email, password) {\n  var requestOptions;\n  return _regeneratorRuntime.async(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          requestOptions = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              first_name: firstName,\n              last_name: lastName,\n              email: email,\n              password: password\n            })\n          };\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(fetch(URL + \"/user\", requestOptions).then(function _callee4(response) {\n            return _regeneratorRuntime.async(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    if (!(response.status === 201)) {\n                      _context4.next = 5;\n                      break;\n                    }\n                    console.log(\"Registration Successful!\");\n                    return _context4.abrupt(\"return\", response.json());\n                  case 5:\n                    if (response.status === 400) {\n                      console.log(\"Invalid email address :( \");\n                    } else {\n                      console.log(\"Oops, something went wrong\");\n                    }\n                  case 6:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).then(function _callee5(rJson) {\n            return _regeneratorRuntime.async(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    console.log(rJson);\n                  case 1:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).then(function () {\n            enableButton();\n          }));\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var postLogout = function _callee7() {\n  var requestOptions;\n  return _regeneratorRuntime.async(function _callee7$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          console.log(\"Logout request received\");\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('WhatsThat_usr_token'));\n        case 3:\n          _context7.t0 = _context7.sent;\n          _context7.t1 = {\n            'X-Authorization': _context7.t0\n          };\n          requestOptions = {\n            method: 'POST',\n            headers: _context7.t1\n          };\n          _context7.next = 8;\n          return _regeneratorRuntime.awrap(fetch(URL + \"/logout\", requestOptions));\n        case 8:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getUserInfo = function _callee9(handleProfileUpdate) {\n  var token, id, requestOptions;\n  return _regeneratorRuntime.async(function _callee9$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"WhatsThat_usr_token\"));\n        case 2:\n          token = _context9.sent;\n          _context9.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"WhatsThat_usr_id\"));\n        case 5:\n          id = _context9.sent;\n          requestOptions = {\n            method: 'GET',\n            headers: {\n              'X-Authorization': token\n            }\n          };\n          _context9.next = 9;\n          return _regeneratorRuntime.awrap(fetch(URL + \"/user/\" + id, requestOptions).then(function _callee8(response) {\n            return _regeneratorRuntime.async(function _callee8$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    if (!(response.status === 200 || response.status === 304)) {\n                      _context8.next = 4;\n                      break;\n                    }\n                    return _context8.abrupt(\"return\", response.json());\n                  case 4:\n                    if (response.status === 400) {\n                      console.log(\"UnAuthorized\");\n                    } else {\n                      console.log(\"Something went wrong\");\n                    }\n                  case 5:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).then(function (rJson) {\n            handleProfileUpdate(rJson.first_name, rJson.last_name, rJson.email);\n          }));\n        case 9:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var patchUserInfo = function _callee12(console.log, first_name, last_name, email_address, pwd) {\n  var token, id, requestOptions;\n  return _regeneratorRuntime.async(function _callee12$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"WhatsThat_usr_token\"));\n        case 2:\n          token = _context12.sent;\n          _context12.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"WhatsThat_usr_id\"));\n        case 5:\n          id = _context12.sent;\n          console.log(\"Received user detail patch request for \" + id);\n          requestOptions = {\n            method: 'PATCH',\n            headers: {\n              'X-Authorization': token,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              first_name: first_name,\n              last_name: last_name,\n              email: email_address,\n              password: pwd\n            })\n          };\n          console.log(URL + \"/user/\" + id, requestOptions);\n          _context12.next = 11;\n          return _regeneratorRuntime.awrap(fetch(URL + \"/user/\" + id, requestOptions).then(function _callee10(response) {\n            return _regeneratorRuntime.async(function _callee10$(_context10) {\n              while (1) {\n                switch (_context10.prev = _context10.next) {\n                  case 0:\n                    if (!(response.status === 200)) {\n                      _context10.next = 5;\n                      break;\n                    }\n                    console.log(\"Details changed successfully\");\n                    return _context10.abrupt(\"return\", response.json());\n                  case 5:\n                    if (response.status === 400) {\n                      console.log(\"Bad inputs\");\n                    } else {\n                      console.log(\"Oops, something went wrong\");\n                    }\n                  case 6:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).then(function _callee11(responseJson) {\n            return _regeneratorRuntime.async(function _callee11$(_context11) {\n              while (1) {\n                switch (_context11.prev = _context11.next) {\n                  case 0:\n                    console.log(responseJson);\n                    _context11.prev = 1;\n                    _context11.next = 4;\n                    return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"WhatsThat_usr_id\", responseJson.id.toString()));\n                  case 4:\n                    _context11.next = 6;\n                    return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"WhatsThat_usr_token\", responseJson.token));\n                  case 6:\n                    _context11.next = 11;\n                    break;\n                  case 8:\n                    _context11.prev = 8;\n                    _context11.t0 = _context11[\"catch\"](1);\n                    throw \"Something went wrong\";\n                  case 11:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }\n            }, null, null, [[1, 8]], Promise);\n          }));\n        case 11:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getAvatar = function _callee13(handleSetAvatar) {\n  var id, token;\n  return _regeneratorRuntime.async(function _callee13$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"WhatsThat_usr_id\"));\n        case 2:\n          id = _context13.sent;\n          _context13.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"WhatsThat_usr_token\"));\n        case 5:\n          token = _context13.sent;\n          console.log(\"Get avatar request received\");\n          console.log(URL + \"/user/\" + id + \"/photo\", token);\n          fetch(URL_WEB + \"/user/\" + id + \"/photo\", {\n            method: \"GET\",\n            headers: {\n              \"X-Authorization\": \"56f7452d54408c0b43367d6fc09f6aa0\"\n            }\n          }).then(function (response) {\n            console.log(response);\n            return response.blob();\n          }).then(function (responseBlob) {\n            var data = URL.createObjectURL(responseBlob);\n            handleSetAvatar(data);\n          }).catch(function (error) {\n            return console.error(error);\n          });\n        case 9:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var postAvatar = function _callee14(blob, handleSetAvatar, console.log) {\n  var id, token;\n  return _regeneratorRuntime.async(function _callee14$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.prev = 0;\n          _context14.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"WhatsThat_usr_id\"));\n        case 3:\n          id = _context14.sent;\n          _context14.next = 6;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"WhatsThat_usr_token\"));\n        case 6:\n          token = _context14.sent;\n          console.log(\"Sending avatar for \" + id);\n          if (!(!id || !token)) {\n            _context14.next = 10;\n            break;\n          }\n          throw new Error(\"User ID or token not found in AsyncStorage\");\n        case 10:\n          _context14.next = 12;\n          return _regeneratorRuntime.awrap(fetch(URL + \"/user/\" + id + \"/photo\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'image/png',\n              'X-Authorization': token\n            },\n            body: blob\n          }).then(function (response) {\n            handleSetAvatar;\n            console.log(\"Avatar changed successfully\");\n          }).catch(function (error) {\n            console.log(error);\n          }));\n        case 12:\n          _context14.next = 17;\n          break;\n        case 14:\n          _context14.prev = 14;\n          _context14.t0 = _context14[\"catch\"](0);\n          throw new Error(\"Something went wrong\");\n        case 17:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, [[0, 14]], Promise);\n};\nexport var getContacts = function _callee15() {\n  var token, response, json;\n  return _regeneratorRuntime.async(function _callee15$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"WhatsThat_usr_token\"));\n        case 3:\n          token = _context15.sent;\n          _context15.next = 6;\n          return _regeneratorRuntime.awrap(fetch(URL + \"/contacts\", {\n            method: 'GET',\n            headers: {\n              'X-Authorization': token\n            }\n          }));\n        case 6:\n          response = _context15.sent;\n          if (!(response.status === 200)) {\n            _context15.next = 15;\n            break;\n          }\n          console.log(\"Fetched contacts\");\n          _context15.next = 11;\n          return _regeneratorRuntime.awrap(response.json());\n        case 11:\n          json = _context15.sent;\n          return _context15.abrupt(\"return\", json);\n        case 15:\n          if (response.status === 400) {\n            console.log(\"Unauthorized\");\n          } else {\n            console.log(\"Oops, something went wrong\");\n          }\n        case 16:\n          _context15.next = 21;\n          break;\n        case 18:\n          _context15.prev = 18;\n          _context15.t0 = _context15[\"catch\"](0);\n          console.log(\"Error fetching contacts:\", _context15.t0);\n        case 21:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, [[0, 18]], Promise);\n};\nexport var getUsers = function _callee16() {\n  var token, response, json;\n  return _regeneratorRuntime.async(function _callee16$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.prev = 0;\n          _context16.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"WhatsThat_usr_token\"));\n        case 3:\n          token = _context16.sent;\n          _context16.next = 6;\n          return _regeneratorRuntime.awrap(fetch(URL + \"/search?search_in=all&limit=20&offset=0\", {\n            method: 'GET',\n            headers: {\n              'X-Authorization': token\n            }\n          }));\n        case 6:\n          response = _context16.sent;\n          if (!(response.status === 200 || response.status === 304)) {\n            _context16.next = 15;\n            break;\n          }\n          console.log(\"Fetched users\");\n          _context16.next = 11;\n          return _regeneratorRuntime.awrap(response.json());\n        case 11:\n          json = _context16.sent;\n          return _context16.abrupt(\"return\", json);\n        case 15:\n          if (response.status === 400) {\n            console.log(\"Unauthorized\");\n          } else {\n            console.log(\"Oops, something went wrong\");\n          }\n        case 16:\n          _context16.next = 21;\n          break;\n        case 18:\n          _context16.prev = 18;\n          _context16.t0 = _context16[\"catch\"](0);\n          console.log(\"Error fetching contacts:\", _context16.t0);\n        case 21:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, null, null, [[0, 18]], Promise);\n};\nexport var addContact = function _callee17(id) {\n  var token, response;\n  return _regeneratorRuntime.async(function _callee17$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          console.log(\"Attempting to add contact \" + id);\n          _context17.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"WhatsThat_usr_token\"));\n        case 4:\n          token = _context17.sent;\n          _context17.next = 7;\n          return _regeneratorRuntime.awrap(fetch(URL + \"/user/\" + id + \"/contact\", {\n            method: 'POST',\n            headers: {\n              'X-Authorization': token\n            }\n          }));\n        case 7:\n          response = _context17.sent;\n          if (response.status === 200 || response.status === 304) {\n            console.log(\"Added contact successfully\");\n          } else if (response.status === 400) {\n            console.log(\"Unauthorized\");\n          } else {\n            console.log(\"Oops, something went wrong\");\n          }\n          _context17.next = 14;\n          break;\n        case 11:\n          _context17.prev = 11;\n          _context17.t0 = _context17[\"catch\"](0);\n          console.log(\"Error fetching contacts:\", _context17.t0);\n        case 14:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};","map":{"version":3,"names":["AsyncStorage","URL","URL_WEB","postLogin","_callee3","enableButton","console.log","email","password","requestOptions","_regeneratorRuntime","async","_callee3$","_context3","prev","next","method","headers","body","JSON","stringify","awrap","fetch","then","_callee","response","_callee$","_context","status","abrupt","json","stop","Promise","_callee2","responseJson","_callee2$","_context2","console","log","setItem","id","toString","token","t0","postRegister","_callee6","firstName","lastName","_callee6$","_context6","first_name","last_name","_callee4","_callee4$","_context4","_callee5","rJson","_callee5$","_context5","postLogout","_callee7","_callee7$","_context7","getItem","sent","t1","getUserInfo","_callee9","handleProfileUpdate","_callee9$","_context9","_callee8","_callee8$","_context8","patchUserInfo","_callee12","email_address","pwd","_callee12$","_context12","_callee10","_callee10$","_context10","_callee11","_callee11$","_context11","getAvatar","_callee13","handleSetAvatar","_callee13$","_context13","blob","responseBlob","data","URL","createObjectURL","catch","error","postAvatar","_callee14","_callee14$","_context14","Error","getContacts","_callee15","_callee15$","_context15","getUsers","_callee16","_callee16$","_context16","addContact","_callee17","_callee17$","_context17"],"sources":["C:/Users/Joshua/Documents/repos/whatsthatapp2/util/Client.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst URL = `http://10.0.2.2:3333/api/1.0.0`;\r\nconst URL_WEB = `http://localhost:3333/api/1.0.0`;\r\n\r\nexport const postLogin = async (enableButton, console.log, email, password) => {\r\n    if(email && password){\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ email: email, password: password })\r\n        };   \r\n\r\n        await fetch(\r\n            `${URL}/login`, requestOptions)\r\n            .then(async (response) => {\r\n            if (response.status === 200) {\r\n                console.log(\"Login Successful!\")\r\n                return response.json()\r\n            } else if (response.status === 400){\r\n                console.log(\"Invalid login credentials :(\")\r\n            } else {\r\n                console.log(\"Oops, something went wrong\")\r\n            }\r\n        })\r\n        .then(async (responseJson) => {\r\n            console.log(responseJson)\r\n            try {\r\n                await AsyncStorage.setItem(\"WhatsThat_usr_id\", responseJson.id.toString())\r\n                await AsyncStorage.setItem(\"WhatsThat_usr_token\", responseJson.token)\r\n            } catch {\r\n                throw \"Something went wrong\"\r\n            }\r\n        })\r\n        .then(() =>{\r\n            enableButton\r\n        })\r\n\r\n    } else {\r\n        console.log(\"Login credentials cannot be empty\")\r\n        enableButton\r\n    }\r\n}\r\n\r\nexport const postRegister = async (console.log, enableButton, firstName, lastName, email, password) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ \r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            email: email,\r\n            password: password})\r\n      };\r\n      \r\n      await fetch(`${URL}/user`, requestOptions)\r\n          .then(async (response) => {\r\n            if (response.status === 201) {\r\n                console.log(\"Registration Successful!\")\r\n                return response.json()\r\n            } else if (response.status === 400){\r\n                console.log(\"Invalid email address :( \")\r\n            } else {\r\n                console.log(\"Oops, something went wrong\")\r\n            }\r\n        })\r\n        .then(async (rJson) => {\r\n            console.log(rJson)\r\n        })\r\n        .then(() =>{\r\n            enableButton();\r\n        })\r\n}\r\n\r\nexport const postLogout = async() => {\r\n    console.log(\"Logout request received\")\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { \r\n            'X-Authorization': await AsyncStorage.getItem('WhatsThat_usr_token') \r\n        },\r\n      };\r\n    await fetch(`${URL}/logout`, requestOptions)\r\n}\r\n\r\nexport const getUserInfo = async(handleProfileUpdate) => {\r\n    const token = await AsyncStorage.getItem(\"WhatsThat_usr_token\")\r\n    const id = await AsyncStorage.getItem(\"WhatsThat_usr_id\")\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { \r\n            'X-Authorization': token\r\n        },\r\n      };\r\n    await fetch(\r\n        `${URL}/user/${id}`, requestOptions)\r\n        .then(async (response) => {\r\n        if (response.status === 200 || response.status === 304) {\r\n            return response.json()\r\n        } else if (response.status === 400){\r\n            console.log(\"UnAuthorized\")\r\n        } else {\r\n            console.log(\"Something went wrong\")\r\n        }\r\n    })\r\n    .then(rJson => {\r\n        handleProfileUpdate(rJson.first_name, rJson.last_name, rJson.email)\r\n    })\r\n}\r\n\r\nexport const patchUserInfo = async(console.log, first_name, last_name, email_address, pwd) => {\r\n    const token = await AsyncStorage.getItem(\"WhatsThat_usr_token\")\r\n    const id = await AsyncStorage.getItem(\"WhatsThat_usr_id\")\r\n    console.log(`Received user detail patch request for ${id}`)\r\n    const requestOptions = {\r\n        method: 'PATCH',\r\n        headers: { 'X-Authorization': token,\r\n        'Content-Type': 'application/json',  },\r\n        body: JSON.stringify({ \r\n            first_name: first_name, \r\n            last_name: last_name,\r\n            email: email_address,\r\n            password: pwd })\r\n      };\r\n      console.log(`${URL}/user/${id}`, requestOptions)\r\n      await fetch(\r\n        `${URL}/user/${id}`, requestOptions)\r\n        .then(async (response) => {\r\n        if (response.status === 200) {\r\n            console.log(\"Details changed successfully\")\r\n            return response.json()\r\n        } else if (response.status === 400){\r\n            console.log(\"Bad inputs\")\r\n        } else {\r\n            console.log(\"Oops, something went wrong\")\r\n        }\r\n    })\r\n    .then(async (responseJson) => {\r\n        console.log(responseJson)\r\n        try {\r\n            await AsyncStorage.setItem(\"WhatsThat_usr_id\", responseJson.id.toString())\r\n            await AsyncStorage.setItem(\"WhatsThat_usr_token\", responseJson.token)\r\n        } catch {\r\n            throw \"Something went wrong\"\r\n        }\r\n    })\r\n}\r\n\r\nexport const getAvatar = async (handleSetAvatar) => {\r\n    const id = await AsyncStorage.getItem(\"WhatsThat_usr_id\");\r\n    const token = await AsyncStorage.getItem(\"WhatsThat_usr_token\");\r\n    console.log(\"Get avatar request received\")\r\n    console.log(`${URL}/user/${id}/photo`, token)\r\n    fetch(`${URL_WEB}/user/${id}/photo`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"X-Authorization\" : \"56f7452d54408c0b43367d6fc09f6aa0\",\r\n        }\r\n    })\r\n    .then((response) => {\r\n        console.log(response)\r\n        return response.blob();\r\n    })\r\n    .then((responseBlob) => {\r\n        let data = URL.createObjectURL(responseBlob);\r\n        handleSetAvatar(data);\r\n    })\r\n    .catch(error => console.error(error));\r\n}\r\n\r\nexport const postAvatar = async (blob, handleSetAvatar, console.log) => {\r\n    try {\r\n        const id = await AsyncStorage.getItem(\"WhatsThat_usr_id\");\r\n        const token = await AsyncStorage.getItem(\"WhatsThat_usr_token\");\r\n        console.log(`Sending avatar for ${id}`)\r\n\r\n        if (!id || !token) {\r\n            throw new Error(\"User ID or token not found in AsyncStorage\");\r\n        }\r\n\r\n        await fetch(`${URL}/user/${id}/photo`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'image/png',\r\n            'X-Authorization' : token,\r\n        },\r\n            body: blob,\r\n        })\r\n        .then(response => {\r\n            handleSetAvatar;\r\n            console.log(\"Avatar changed successfully\")\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n    } catch {\r\n        throw new Error(\"Something went wrong\")\r\n    }\r\n}\r\n\r\nexport const getContacts = async () => {\r\n    try {\r\n        const token = await AsyncStorage.getItem(\"WhatsThat_usr_token\");\r\n        const response = await fetch(`${URL}/contacts`, {\r\n            method: 'GET',\r\n            headers: {\r\n            'X-Authorization' : token,\r\n            },\r\n        });\r\n    \r\n        if (response.status === 200) {\r\n            console.log(\"Fetched contacts\");\r\n            const json = await response.json();\r\n            return json;\r\n        } else if (response.status === 400) {\r\n            console.log(\"Unauthorized\");\r\n        } else {\r\n            console.log(\"Oops, something went wrong\");\r\n        }\r\n    } catch (error) {\r\n        console.log(\"Error fetching contacts:\", error);\r\n    }\r\n};\r\n\r\nexport const getUsers = async () => {\r\n    try {\r\n        const token = await AsyncStorage.getItem(\"WhatsThat_usr_token\");\r\n        const response = await fetch(`${URL}/search?search_in=all&limit=20&offset=0`, {\r\n            method: 'GET',\r\n            headers: {\r\n            'X-Authorization' : token,\r\n            },\r\n        });\r\n    \r\n        if (response.status === 200 || response.status === 304) {\r\n            console.log(\"Fetched users\");\r\n            const json = await response.json();\r\n            return json;\r\n        } else if (response.status === 400) {\r\n            console.log(\"Unauthorized\");\r\n        } else {\r\n            console.log(\"Oops, something went wrong\");\r\n        }\r\n    } catch (error) {\r\n        console.log(\"Error fetching contacts:\", error);\r\n    }\r\n};\r\n\r\nexport const addContact = async (id) => {\r\n    try {\r\n        console.log(`Attempting to add contact ${id}`)\r\n        const token = await AsyncStorage.getItem(\"WhatsThat_usr_token\");\r\n        const response = await fetch(`${URL}/user/${id}/contact`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'X-Authorization' : token,\r\n            },\r\n        });\r\n    \r\n        if (response.status === 200 || response.status === 304) {\r\n            console.log(\"Added contact successfully\");\r\n        } else if (response.status === 400) {\r\n            console.log(\"Unauthorized\");\r\n        } else {\r\n            console.log(\"Oops, something went wrong\");\r\n        }\r\n    } catch (error) {\r\n        console.log(\"Error fetching contacts:\", error);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}